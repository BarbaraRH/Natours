/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px; /* darle un padding a toda la pagina */
}

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.8),
      rgb(40, 180, 133, 0.8)
    ),
    url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative; /* header elemento padre de logo-box, propiedad 
  para fijar posicion absoluta de logo-box respecto a su padre header, 
  y que no se fije respecto a body */

  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
  position: absolute; /* su referencia es un elemento padre 
  (en este caso header) que tiene su posicion: relative */
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px; /* width se controlará automaticamente */
}

.text-box {
  position: absolute;
  top: 40%; /* por el efecto del poligono no se centrará verticalemnte, 
  sino que se dejará un poco mas arriba */
  left: 50%;
  transform: translate(
    -50%,
    -50%
  ); /* para que la posicion quede al centro de la caja 
  y no en la esquina superior izquierda. Se va a correr 50% hacia arriba 
  y hacia la izq de si mismo */
  text-align: center; /* para que btn, como es un elemento inline,
   puede ser tratado como texto, asi que sirve text-align 
   para centrarlo */
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden; /* para eliminar el "temblor" 
  en las animaciones (¿? no caché el temblor) */
  margin: 60px;
}

.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400; /* como es una fuente importada(google fonts: lato), 
  los weight tb se importaron y deben indicarse en el link de html */
  letter-spacing: 35px;
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out; /* "ease-out" comienza mas rápido
  y termina mas lento */

  /* 
  animation-iteration-count: 3; se repite la animacion las veces indicadas
  animation-delay: 3s; la animacion comienza con delay de segundos indicados
  */
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;
  animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }

  80% {
    transform: translateX(10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  80% {
    transform: translateX(-10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

.btn:link, /* link estado de un elemento anchor */
.btn:visited {
  /* visited estado de un elemento anchor a sido presionado
    en estado default se pone purpura */
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  display: inline-block; /* porque su default es inline y con el padding 
  hace que se sobreponga */
  border-radius: 100px;
  transition: all 0.2s; /* forma mas simple y antigua de animar 
  (all means all properties), y se debe colocar en el estado inicial */
  position: relative; /* para dar una referencia de posicion a btn::after */
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  /* sombra eje x, sombra eje y, grado de borroso, color sombra*/
}

.btn:active {
  /* active es cuando se hace click */
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn-white {
  background-color: #fff;
  color: #777;
}

.btn::after {
  content: ""; /* siempre se debe especificar en un after. 
  aunque esté vacío */
  display: inline-block; /* tambien se debe especificar siempre */
  /* inline-block porque el boton original tb lo es */
  height: 100%; /* after es como un child del original, por lo tanto debe indicarse el tamaño en relacion al original */
  width: 100%;
  border-radius: 100px;
  position: absolute; /* para que se posicione respecto a btn(padre) */
  top: 0;
  left: 0;
  z-index: -1; /* para que se ponga detrás de btn */
  transition: all, 0.4s; /* estado inicial para animacion al hacer hover(.btn:hover::after) */
}

.btn-white::after {
  background-color: #fff;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6); /* para que crezca el boton */
  opacity: 0;
}

.btn-animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  /* el .75 indica un delay */
  animation-fill-mode: backwards;
  /* automaticamente aplica los estilos del 0% de la animación,
  sino, como tiene delay, se ve el botón antes de que empiece la animación */
}
